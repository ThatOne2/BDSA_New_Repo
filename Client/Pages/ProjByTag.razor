@page "/project/tag/{text?}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TrialProject.Shared
@using TrialProject.Shared.DTO;
@inject NavigationManager NavManager
@* @attribute [Authorize] *@
@inject HttpClient Http

<PageTitle>Results for the tag: @Text </PageTitle>

@if (projectsList == null)
{
    <p><em>Loading...</em></p>
} 
else
{

<h1>Results for the tag: @Text</h1>

<SearchBar />

<div class = "center">
    <div class = "resultPane">
        @if (projectsList == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var proj in projectsList)
            {
                <div class = "projectContainer white">
                    <div class = "projectContainerLeft">
                        <div class = "pictureWannabe"></div>
                        <div class = "text">
                            <p>@proj.SupervisorName</p>
                        </div>
                    </div>
                    <div class = "projectContainerRight">
                        <div class = "centerText">
                            <h2>@proj.name</h2>
                        </div>
                        <p>@proj.shortDescription</p>
                        <div class = "tagBox">
                            @foreach (var tag in proj.Tags!)
                            {
                                <button class = "tagBtn" @onclick="@(() => GoToTag(@tag))"> @tag </button>
                            }
                        </div>
                        <button class = "viewProjBtn" @onclick="@(() => ViewProj(proj))"> View </button>
                    </div>
                </div>
            }
        }
    </div>
</div>
}

@code {
    [Parameter]
    public string? Text { get; set; }

    private ProjectPreviewDTO[]? projectsList;
    
    private void ViewProj(ProjectPreviewDTO project)
    {
        var uri = $"{NavManager.BaseUri}project/{project.ID}";

        NavManager.NavigateTo(uri);
    }

    private void GoToTag(string tag)
    {
        var uri = $"{NavManager.BaseUri}project/tag/{tag}";
        NavManager.NavigateTo(uri, true);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            projectsList = await Http.GetFromJsonAsync<ProjectPreviewDTO[]>("Project/rawtag/"+ Text);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private void NavToDetails(int id)
	{
		NavManager.NavigateTo("/project/" + id);
	}
}
