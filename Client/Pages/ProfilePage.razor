@page "/profilePage"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TrialProject.Shared
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@using System.Text;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]


    <AuthorizeView>
        <Authorized>
            <div class = "container">
                <div class="top_background">
                    <img src="css\open-iconic\user_icon.svg" alt="profile pic" width="100px" />
                    <h4>@context.User.Identity?.Name</h4>
                </div>
                <div class = "information">
                    <h5>About you</h5>
                    <hr class="line">
                    <p>Email: @email</p>
                    <p>Account Type: @usertype</p>
                </div>
            </div>

        </Authorized>
    </AuthorizeView>




@code {
    string email = "";
    string usertype = "";
    //private System.Security.Claims.ClaimsPrincipal? user;
    IEnumerable<System.Security.Claims.Claim>? claims;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            claims = user.Claims;
            usertype = claims.Where(x => x.Type == "appRole").Select(y => y.Value).FirstOrDefault()!;
            email = user.Claims.Where(x => x.Type == "email").Select(y => y.Value).First();
        }
    }
}