@page "/profilePage"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TrialProject.Shared
@inject CurrentUser currentuser
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@using System.Text;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<AuthorizeView>
    <NotAuthorized>
        <h5>Please log in to proceed to your profile page</h5>
    </NotAuthorized>
    <Authorized>

        <body>
            <div class="top_background">
            <div class="profile_in_short"> 
                <div class="p_pic">
                    <img src="css\open-iconic\user_icon.svg" alt="profile pic" width="100px" />
                </div>
                <h4>@context.User.Identity?.Name</h4>
            </div>
        </div>

        <div class="student_or_supervisor">
            
        </div>


        <div class="divs">
            <h5>Contact</h5>
            <div class="divider" ></div>
            <p>Email: @email</p>
            <p>You're a @usertype</p>
        </div>

        <div class="sepH"></div>
        </body>


    </Authorized>
</AuthorizeView>

@code {
    string email = "";
    string usertype = "";
    private System.Security.Claims.ClaimsPrincipal? user;
    IEnumerable<System.Security.Claims.Claim>? claims;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            claims = user.Claims;
            usertype = claims.Where(x => x.Type == "appRole").Select(y => y.Value).FirstOrDefault()!;
            email = user.Claims.Where(x => x.Type == "email").Select(y => y.Value).First();
        }
    }
}