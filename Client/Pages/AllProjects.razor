@page "/allprojects"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TrialProject.Shared
@using TrialProject.Shared.DTO;
@inject NavigationManager NavManager
@* @attribute [Authorize] *@
@inject HttpClient Http

<PageTitle>All projects</PageTitle>

<h1>All projects</h1>

<p>An overview of all projects</p>

@if (projectsList == null)
{
    <p><em>@message</em></p>
}
else
{
    <div class = "center">
        <div class = "resultPane">
            <AuthorizeView Roles="supervisor">
                <Authorized>
                    <button class="viewProjBtn" id = "createBtn" @onclick="NavToNewProject">Create New</button>
                </Authorized>
            </AuthorizeView>
            @if (projectsList == null )
            {
                <h1>@message</h1>
            }
            else
            {
                @foreach (var proj in projectsList)
                {
                    <div class = "projectContainer white">
                        <div class = "projectContainerLeft">
                            <div class = "pictureWannabe"></div>
                            <div class = "text">
                                <p>@proj.SupervisorName</p>
                            </div>
                        </div>
                        <div class = "projectContainerRight">
                            <div class = "centerText">
                                <h2>@proj.name</h2>
                            </div>
                            <p>@proj.shortDescription</p>
                            <div class = "tagBox">
                                @foreach (var tag in proj.Tags!)
                                {
                                    <button class = "tagBtn" @onclick="@(() => GoToTag(@tag))"> @tag </button>
                                }
                            </div>
                            <button class = "viewProjBtn" @onclick="() => NavToDetails(proj.ID)"> View </button>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}

@code {
    private string message = "Loading...";

    private void NavToNewProject()
    {
        NavManager.NavigateTo("/projects/new");
    }
    private void GoToTag(string tag)
    {
        var uri = $"{NavManager.BaseUri}project/tag/{tag}";
        NavManager.NavigateTo(uri, true);
    }

    private ProjectPreviewDTO[]? projectsList;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            projectsList = await Http.GetFromJsonAsync<ProjectPreviewDTO[]>("Project/api");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception)
        {
            message = "An error has occurred, please try again.";
        }
    }

    private void NavToDetails(int id)
	{
		NavManager.NavigateTo("/project/" + id);
	}
}
