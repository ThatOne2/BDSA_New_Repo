@page "/havefun"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TrialProject.Shared
@inject HttpClient Http
@inject List<Project> projects
@inject CurrentUser currentuser


<PageTitle>We all just having the most fun</PageTitle>

<h1>Are you having fun? </h1>

<p>If you're not I'm gonna kill you uwu</p>


    <table class="table">
        <thead>
            <tr>
                <th>Project</th>
                <th>Teacher</th>
                <th>Discription</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var proj in projects)
            {
                <tr>
                    <td>@proj.name</td>
                    <td> <span class="oi oi-person" aria-hidden="true"></span>     @proj.supervisor</td>
                    <td>@proj.shortDescription</td>
                </tr>
            }
        </tbody>
    </table>
    <AuthorizeView>
        
    <Authorized>

        @if(currentuser.isSupervisor){
            <div class="PostProject">
                <label for="pname">Project Name</label>
                <input type="text" id="pname" name="projname" placeholder="Project name.." @bind="@inputName" @oninput="OnInputNameEvent">

                <label for="sname">Your Name</label>
                <input type="text" id="sname" name="supername" placeholder="Your name.." @bind="@inputSuperName" @oninput="OnInputSuperNameEvent">

                <label for="pdes">Project Description</label>
                <input type="text" id="pdes" name="projdes" placeholder="Project description.."@bind="@inputDes" @oninput="OnInputDesEvent">
                <button class="OurButton" @onclick="addProject">Post Project</button>
            </div>
        } 
       
    </Authorized>
    <NotAuthorized>
        <p>Login to post a project</p>
    </NotAuthorized>
</AuthorizeView>



@code {

    private string inputName = null;
    private string inputDes = null;
     private string inputSuperName = null;



    private void OnInputNameEvent(ChangeEventArgs changeEvent)
    {
        inputName = (string)changeEvent.Value;
    }

     private void OnInputSuperNameEvent(ChangeEventArgs changeEvent)
    {
        inputSuperName = (string)changeEvent.Value;
    }

     private void OnInputDesEvent(ChangeEventArgs changeEvent)
    {
        inputDes = (string)changeEvent.Value;
    }

   

    private void addProject() {
        var p1 = new Project{name = inputName, supervisor = inputSuperName, shortDescription = inputDes};
        projects.Add(p1);
    }
}



@code {
   

    protected override async Task OnInitializedAsync()
    {
        if(!projects.Any()){
              var p1 = new Project{name = "Fun Project", supervisor = "Bente", shortDescription = "This is the coolest project you can imagne"};
            var p2 = new Project{name = "Not so fun Project", supervisor = "Felix", shortDescription = "I don't actually care for this project"};
            projects.Add(p1);
            projects.Add(p2);
        }
      
    }



}
