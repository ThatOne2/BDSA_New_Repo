@using TrialProject.Shared
@using TrialProject.Shared.DTO
@inject List<ProjectPreviewDTO> projectDTOs
@using System.Collections.Generic

@if (hasSearched)
{
    <h1>Results for: "@searchOutput"</h1>
}
else
{
    <h1>Welcome to TheStart of a great project or thesis!</h1>
}

<div class = "searchBar" id = "bar">
    <input type="text" id="searchInput" class = "white" placeholder="Search" @bind="@searchInput" @onkeyup="@Enter">
    <button title="searchButton" class="white searchBtn" @onclick="Search">
        <span class="oi oi-magnifying-glass"></span>
    </button>
</div>


@if (hasSearched)
{
    <div class = "center">
        <div class = "resultPane">
            @foreach (var proj in projectDTOs)
            {
                <div class = "projectContainer white">
                    <div class = "projectContainerLeft">
                        <div class = "pictureWannabe"></div>
                        <p>@proj.SupervisorName</p>
                    </div>
                    <div class = "projectContainerRight">
                        <div class = "centerText">
                            <h2>@proj.name</h2>
                        </div>
                        <p>@proj.shortDescription</p>
                        <div class = "tagBox">
                            @foreach (var tag in proj.Tags)
                            {
                                <div class = "tag">
                                    <p>@tag.Name</p>
                                </div>
                            }
                        </div>
                        <button class = "viewProjBtn" @onclick = "ViewProj"> View </button>
                    </div>
                </div>
            }
        </div>
    </div>
}
else 
{
    <HomepageContentWelcome />
}

@code {
    private bool hasSearched = false;
    private int count = 0;
    private string searchInput = "";
    private string searchOutput = "";
    private List<Project>? projects;
    
    private void Search()
    {
        if (!string.IsNullOrEmpty(searchInput))
        {
            hasSearched = true;
            count ++;
            searchOutput = searchInput;

        }
    }
    private void ViewProj()
    {
        //do somethin
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            Search();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        projectDTOs = new List<ProjectPreviewDTO>();
        
        ICollection<Tag> tagcollection = new List<Tag>();
        
        var t1 = new Tag{Id = 1, Name = "Algorithms"};
        var t2 = new Tag{Id = 2, Name = "Datastructures"};
        var t3 = new Tag{Id = 3, Name = "Your mom"};
        var t7 = new Tag{Id = 3, Name = "Your mom"};
        var t8 = new Tag{Id = 3, Name = "Your mom"};
        var t5 = new Tag{Id = 5, Name = "HHCAPSLOCKHHHH"};
        var t6 = new Tag{Id = 6, Name = "B"};

        tagcollection.Add(t1);
        tagcollection.Add(t2);
        tagcollection.Add(t3);
        tagcollection.Add(t7);
        tagcollection.Add(t8);
        tagcollection.Add(t5);
        tagcollection.Add(t6);

        var p1 = new ProjectPreviewDTO{name = "Fun Project", SupervisorName = "Bente Andersen the 3rd", shortDescription = "This is the coolest project you can imagne! like... Oh my gawd it's sooo fucking cool. You'll get all the swag points? I wouldn't know if people say that anymore. I'm a professor! I have a fucking PHD", Tags = tagcollection};
        var p2 = new ProjectPreviewDTO{name = "Not so fun Project", SupervisorName = "Felix", shortDescription = "I don't actually care for this project", Tags = tagcollection};
        projectDTOs.Add(p1);
        projectDTOs.Add(p2);
    }
}
